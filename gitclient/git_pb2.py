# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: git.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='git.proto',
  package='git',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\tgit.proto\x12\x03git\"\x1c\n\x0cRequest_Path\x12\x0c\n\x04path\x18\x01 \x01(\t\"R\n\x0cRequest_File\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x10\n\x08\x66iledata\x18\x02 \x01(\x0c\x12\x10\n\x08\x66ilename\x18\x03 \x01(\t\x12\x10\n\x08\x66ilemode\x18\x04 \x01(\r\"!\n\x0fResponse_Result\x12\x0e\n\x06result\x18\x01 \x01(\t\")\n\rResponse_Tree\x12\x18\n\x05trees\x18\x01 \x03(\x0b\x32\t.git.Tree\"0\n\x04Tree\x12\x0c\n\x04Name\x18\x01 \x01(\t\x12\x0c\n\x04Mode\x18\x02 \x01(\r\x12\x0c\n\x04Hash\x18\x03 \x01(\t2\xc0\x01\n\x03Git\x12\x43\n\x16\x43reateAndInitDirectory\x12\x11.git.Request_Path\x1a\x14.git.Response_Result\"\x00\x12<\n\x0f\x41\x64\x64OrUpdateFile\x12\x11.git.Request_File\x1a\x14.git.Response_Result\"\x00\x12\x36\n\x0bGetRepoTree\x12\x11.git.Request_Path\x1a\x12.git.Response_Tree\"\x00\x62\x06proto3')
)




_REQUEST_PATH = _descriptor.Descriptor(
  name='Request_Path',
  full_name='git.Request_Path',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='git.Request_Path.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=46,
)


_REQUEST_FILE = _descriptor.Descriptor(
  name='Request_File',
  full_name='git.Request_File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='git.Request_File.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filedata', full_name='git.Request_File.filedata', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filename', full_name='git.Request_File.filename', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filemode', full_name='git.Request_File.filemode', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=130,
)


_RESPONSE_RESULT = _descriptor.Descriptor(
  name='Response_Result',
  full_name='git.Response_Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='git.Response_Result.result', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=165,
)


_RESPONSE_TREE = _descriptor.Descriptor(
  name='Response_Tree',
  full_name='git.Response_Tree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='trees', full_name='git.Response_Tree.trees', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=167,
  serialized_end=208,
)


_TREE = _descriptor.Descriptor(
  name='Tree',
  full_name='git.Tree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='git.Tree.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Mode', full_name='git.Tree.Mode', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Hash', full_name='git.Tree.Hash', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=258,
)

_RESPONSE_TREE.fields_by_name['trees'].message_type = _TREE
DESCRIPTOR.message_types_by_name['Request_Path'] = _REQUEST_PATH
DESCRIPTOR.message_types_by_name['Request_File'] = _REQUEST_FILE
DESCRIPTOR.message_types_by_name['Response_Result'] = _RESPONSE_RESULT
DESCRIPTOR.message_types_by_name['Response_Tree'] = _RESPONSE_TREE
DESCRIPTOR.message_types_by_name['Tree'] = _TREE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Request_Path = _reflection.GeneratedProtocolMessageType('Request_Path', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST_PATH,
  __module__ = 'git_pb2'
  # @@protoc_insertion_point(class_scope:git.Request_Path)
  ))
_sym_db.RegisterMessage(Request_Path)

Request_File = _reflection.GeneratedProtocolMessageType('Request_File', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST_FILE,
  __module__ = 'git_pb2'
  # @@protoc_insertion_point(class_scope:git.Request_File)
  ))
_sym_db.RegisterMessage(Request_File)

Response_Result = _reflection.GeneratedProtocolMessageType('Response_Result', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE_RESULT,
  __module__ = 'git_pb2'
  # @@protoc_insertion_point(class_scope:git.Response_Result)
  ))
_sym_db.RegisterMessage(Response_Result)

Response_Tree = _reflection.GeneratedProtocolMessageType('Response_Tree', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE_TREE,
  __module__ = 'git_pb2'
  # @@protoc_insertion_point(class_scope:git.Response_Tree)
  ))
_sym_db.RegisterMessage(Response_Tree)

Tree = _reflection.GeneratedProtocolMessageType('Tree', (_message.Message,), dict(
  DESCRIPTOR = _TREE,
  __module__ = 'git_pb2'
  # @@protoc_insertion_point(class_scope:git.Tree)
  ))
_sym_db.RegisterMessage(Tree)



_GIT = _descriptor.ServiceDescriptor(
  name='Git',
  full_name='git.Git',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=261,
  serialized_end=453,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateAndInitDirectory',
    full_name='git.Git.CreateAndInitDirectory',
    index=0,
    containing_service=None,
    input_type=_REQUEST_PATH,
    output_type=_RESPONSE_RESULT,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddOrUpdateFile',
    full_name='git.Git.AddOrUpdateFile',
    index=1,
    containing_service=None,
    input_type=_REQUEST_FILE,
    output_type=_RESPONSE_RESULT,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepoTree',
    full_name='git.Git.GetRepoTree',
    index=2,
    containing_service=None,
    input_type=_REQUEST_PATH,
    output_type=_RESPONSE_TREE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GIT)

DESCRIPTOR.services_by_name['Git'] = _GIT

# @@protoc_insertion_point(module_scope)
